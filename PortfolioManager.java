/**
 * The {@code PortfolioManager} class manages a user's investment portfolio and bank accounts.
 * It provides methods to add various types of investments (real estate, gold, cryptocurrency),
 * add and retrieve bank accounts, edit or remove investments, list assets, and calculate zakat
 * (charitable contribution) based on the total value of investments and bank balances.
 */
import java.util.*;

public class PortfolioManager {
    private InvestmentPortfolio portfolio = new InvestmentPortfolio();
    private List<BankAccount> bankAccounts = new ArrayList<>();

    /**
     * Adds a real estate investment to the portfolio.
     *
     * @param location the location of the real estate property
     * @param price    the price of the property
     * @param rental   the rental income generated by the property
     */
    public void addRealEstate(String location, double price, double rental) {
        portfolio.addInvestment(new RealEstateInvestment(location, price, rental));
    }

    /**
     * Adds a gold investment to the portfolio.
     *
     * @param grams        the weight of the gold in grams
     * @param pricePerGram the price per gram of gold
     */
    public void addGold(double grams, double pricePerGram) {
        portfolio.addInvestment(new GoldInvestment(grams, pricePerGram));
    }

    /**
     * Adds a cryptocurrency investment to the portfolio.
     *
     * @param coin      the name of the cryptocurrency (e.g., Bitcoin, Ethereum)
     * @param units     the number of units owned
     * @param price     the price per unit of the cryptocurrency
     */
    public void addCrypto(String coin, double units, double price) {
        portfolio.addInvestment(new CryptoInvestment(coin, units, price));
    }

    /**
     * Adds a bank account to the list of managed bank accounts.
     *
     * @param account the {@code BankAccount} to add
     */
    public void addBankAccount(BankAccount account) {
        bankAccounts.add(account);
    }

    /**
     * Retrieves the list of managed bank accounts.
     *
     * @return a {@code List} of {@code BankAccount} objects
     */
    public List<BankAccount> getBankAccounts() {
        return bankAccounts;
    }

    /**
     * Edits an investment in the portfolio at the specified index by prompting the user
     * for new values using a {@code Scanner}.
     *
     * @param index the index of the investment to edit
     * @param sc    the {@code Scanner} used to read user input
     */
    public void editAsset(int index, Scanner sc) {
        List<Investment> assets = portfolio.getAssets();
        if (index >= 0 && index < assets.size()) {
            assets.get(index).edit(sc);
        }
    }

    /**
     * Removes an investment from the portfolio at the specified index.
     *
     * @param index the index of the investment to remove
     */
    public void removeAssetByIndex(int index) {
        portfolio.removeInvestment(index);
    }

    /**
     * Retrieves the list of investments in the portfolio.
     *
     * @return a {@code List} of {@code Investment} objects
     */
    public List<Investment> listAssets() {
        return portfolio.getAssets();
    }

}